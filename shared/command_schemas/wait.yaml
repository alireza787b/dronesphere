# Wait Command Schema for MCP Integration
# Path: shared/command_schemas/wait.yaml

name: wait
description: "Pause operations for specified duration with intelligent timing"
category: "utility"
version: "2.0.0"

# MCP Tool Schema (JSON Schema for validation)
mcp_tool_schema:
  type: "object"
  properties:
    duration:
      type: "number"
      minimum: 0.1
      maximum: 300.0
      default: 3.0
      description: "Wait duration in seconds"
    message:
      type: "string"
      maxLength: 100
      description: "Optional status message displayed during wait"
  required: ["duration"]
  additionalProperties: false

# AI Guidelines for Intelligent Processing
ai_guidelines:
  safety_considerations:
    - "Consider battery consumption during extended hover periods"
    - "Account for wind conditions that may affect drone stability during wait"
    - "Ensure wait duration is reasonable for current flight conditions"
    - "Long waits in flight should include battery level monitoring"

  user_education:
    - "Wait pauses drone operations for precise timing control"
    - "Drone maintains current position and altitude during wait period"
    - "Useful for mission timing, sensor stabilization, and sequence coordination"
    - "Wait can be inserted automatically between commands for stability"

  beginner_explanation:
    - "Think of wait like a pause button for your drone"
    - "Drone hovers in place for the time you specify"
    - "Useful for letting things settle before next command"
    - "Good for taking time to plan your next move"

  # Natural language patterns for AI recognition
  natural_language_patterns:
    english:
      - "wait {duration} seconds"
      - "pause for {duration} seconds"
      - "hold position for {duration} seconds"
      - "stabilize for {duration} seconds"
      - "delay {duration} seconds"
      - "hover for {duration} seconds"

    persian:
      - "صبر کن {duration} ثانیه"
      - "توقف {duration} ثانیه"
      - "در همین جا بمان {duration} ثانیه"
      - "تثبیت {duration} ثانیه"

    spanish:
      - "esperar {duration} segundos"
      - "pausar por {duration} segundos"
      - "mantener posición por {duration} segundos"
      - "estabilizar por {duration} segundos"

    german:
      - "warten {duration} Sekunden"
      - "pausieren für {duration} Sekunden"
      - "Position halten für {duration} Sekunden"

  # KEY FEATURE: Intelligent sequence integration
  sequence_intelligence:
    auto_insertion:
      description: "Automatically insert wait commands for stability"
      scenarios:
        - "3-second wait after takeoff for stabilization"
        - "2-second wait between rapid command sequences"
        - "User-specified waits in complex missions"
      explanation: "Smart wait insertion improves flight stability and success rates"

    mission_timing:
      description: "Coordinate timing in multi-step missions"
      examples:
        - "takeoff → wait 3s → goto location → wait 2s → photo → land"
        - "Formation flying with synchronized timing"
        - "Sensor calibration delays"

    battery_awareness:
      short_waits: "< 10s - Minimal battery impact"
      medium_waits: "10-60s - Monitor battery, acceptable for most operations"
      long_waits: "> 60s - Warn user about battery consumption"

# Parameter Definition
parameters:
  duration:
    type: float
    required: true
    min_value: 0.1
    max_value: 300.0
    default: 3.0
    unit: "seconds"
    description: "Wait duration in seconds"

    validation:
      recommended_min: 1.0      # Minimum useful wait time
      recommended_max: 60.0     # Practical maximum for most operations
      battery_consideration: 120.0  # Warn for waits longer than 2 minutes

    user_guidance:
      short_waits: "1-5 seconds for stabilization and command spacing"
      medium_waits: "5-30 seconds for sensor settling or timing coordination"
      long_waits: "30+ seconds for extended operations (monitor battery)"

    # Smart defaults based on context
    smart_defaults:
      post_takeoff: 3.0
      between_commands: 2.0
      sensor_stabilization: 5.0
      user_specified: 3.0

  message:
    type: string
    required: false
    max_length: 100
    description: "Optional status message displayed during wait"
    examples:
      - "Stabilizing after takeoff"
      - "Waiting for wind to calm"
      - "Sensor calibration in progress"
      - "Formation synchronization"
      - "Photo positioning delay"

# Enhanced Safety and Robustness Rules
robustness:
  preconditions:
    - "Duration must be within reasonable limits (0.1-300 seconds)"
    - "Consider battery level for longer waits"
    - "Drone should be in stable flight mode"

  failure_modes:
    battery_critical_during_wait:
      action: "abort_wait_early"
      message: "Battery critical - aborting wait and proceeding to next command"
      threshold: "< 15% battery during wait > 30s"

    excessive_drift_during_wait:
      action: "warn_continue"
      message: "Position drift detected during wait - GPS/sensors may need attention"
      threshold: "> 5m drift from start position"

    duration_too_long:
      action: "warn_user"
      message: "Wait duration > 2 minutes may consume significant battery"
      threshold: "> 120 seconds"

    # NEW: Advanced failure scenarios
    high_wind_during_wait:
      action: "increase_stabilization"
      message: "High wind detected - increasing stabilization effort during wait"

    gps_drift_during_wait:
      action: "position_correction"
      message: "GPS drift detected - applying position hold corrections"

# Sequence Integration Intelligence
sequence_integration:
  auto_insertion_rules:
    post_takeoff:
      condition: "Previous command was takeoff"
      duration: 3.0
      message: "Stabilizing after takeoff"
      reasoning: "Allows flight controller to settle and GPS to stabilize"

    rapid_sequence:
      condition: "Time between commands < 1s"
      duration: 2.0
      message: "Command spacing for stability"
      reasoning: "Prevents overwhelming flight controller with rapid commands"

    altitude_change:
      condition: "Previous command changed altitude > 10m"
      duration: 4.0
      message: "Stabilizing after altitude change"
      reasoning: "Allows pressure sensors and flight systems to equilibrate"

  sequence_examples:
    basic_mission:
      user_request: "takeoff to 15m, then go 50m north"
      intelligent_sequence:
        commands:
          - name: "takeoff"
            params: {"altitude": 15.0}
          - name: "wait"
            params: {"duration": 3.0, "message": "Stabilizing after takeoff"}
          - name: "goto"
            params: {"north": 50.0, "east": 0.0, "down": -15.0}
      explanation: "Added 3-second stabilization wait after takeoff for better navigation accuracy"

# Response Templates for Consistent AI Responses
response_templates:
  initiated: "⏱️ Wait initiated: {duration}s | {message}"
  progress: "⏱️ Waiting... {remaining}s remaining | {message}"
  completed: "✅ Wait completed after {duration}s - ready for next command"
  auto_inserted: "⏱️ Auto-inserted {duration}s wait: {reason}"
  battery_warning: "🔋 Battery at {percent}% - {duration}s wait will consume ~{consumption}%"

  # Context-aware messages
  stabilization: "⏱️ Stabilizing for {duration}s to ensure stable flight"
  mission_timing: "⏱️ Mission timing wait: {duration}s | {message}"
  user_requested: "⏱️ User-requested wait: {duration}s | {message}"

# Multi-language Response Templates
multilingual_responses:
  initiated:
    english: "⏱️ Waiting {duration} seconds - {message}"
    persian: "⏱️ صبر {duration} ثانیه - {message}"
    spanish: "⏱️ Esperando {duration} segundos - {message}"
    german: "⏱️ Warten {duration} Sekunden - {message}"

  completed:
    english: "✅ Wait completed - ready for next command"
    persian: "✅ انتظار تمام شد - آماده برای دستور بعدی"
    spanish: "✅ Espera completada - listo para el siguiente comando"
    german: "✅ Warten beendet - bereit für nächsten Befehl"

# Usage Examples for AI Training
usage_examples:
  basic_wait:
    input: "wait 5 seconds"
    output:
      commands:
        - name: "wait"
          params:
            duration: 5.0
          mode: "continue"

  wait_with_message:
    input: "pause for 10 seconds to stabilize"
    output:
      commands:
        - name: "wait"
          params:
            duration: 10.0
            message: "Stabilizing as requested"
          mode: "continue"

  sequence_with_auto_wait:
    input: "takeoff to 20m then go north 30m"
    output:
      commands:
        - name: "takeoff"
          params: {"altitude": 20.0}
        - name: "wait"
          params:
            duration: 3.0
            message: "Auto-stabilization after takeoff"
        - name: "goto"
          params: {"north": 30.0, "east": 0.0, "down": -20.0}
      explanation: "Auto-inserted stabilization wait for optimal performance"

# Integration with Dronesphere Universal Protocol
dronesphere_integration:
  command_name: "wait"
  api_endpoint: "POST /fleet/commands"
  required_fields: ["duration"]
  optional_fields: ["message"]

  example_payload:
    commands:
      - name: "wait"
        params:
          duration: 5.0
          message: "Mission timing delay"
        mode: "continue"
    target_drone: 1

# Telemetry Integration and Monitoring
telemetry_requirements:
  during_execution:
    - "current_position"        # Monitor for position drift
    - "battery_percentage"      # Track power consumption
    - "flight_mode"            # Ensure stable hover mode
    - "wind_speed"             # Monitor environmental conditions

  monitoring_thresholds:
    position_drift_warning: 3.0   # meters
    position_drift_critical: 10.0 # meters
    battery_consumption_rate: 0.5  # percent per minute typical

# Advanced Features for Professional Use
advanced_features:
  adaptive_wait:
    description: "Adjust wait duration based on environmental conditions"
    wind_factor: "Extend wait in high wind for better stabilization"
    battery_factor: "Reduce wait duration if battery critically low"
    mission_factor: "Optimize wait timing for overall mission efficiency"

  precision_timing:
    gps_sync: "Synchronize waits with GPS time for multi-drone coordination"
    sensor_feedback: "Monitor gyro/accelerometer stability during wait"
    completion_criteria: "End wait early if stability achieved sooner"

  battery_optimization:
    hover_efficiency: "Optimize motor speeds for minimum power consumption"
    altitude_adjustment: "Micro-adjust altitude for best hover efficiency"
    wind_compensation: "Minimize control effort during extended waits"
