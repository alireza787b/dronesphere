# Development Dockerfile - includes all dev tools
FROM python:3.10-slim-bullseye

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Build essentials
    gcc g++ make \
    # PostgreSQL client libs
    libpq-dev \
    # Git for pip installs from repos
    git \
    # Curl for health checks
    curl \
    # Clean up to reduce image size
    && rm -rf /var/lib/apt/lists/*

# Set Python environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    POETRY_VERSION=1.7.1 \
    POETRY_HOME="/opt/poetry" \
    POETRY_VIRTUALENVS_CREATE=false \
    POETRY_NO_INTERACTION=1

# Install Poetry
RUN curl -sSL https://install.python-poetry.org | python3 -
ENV PATH="$POETRY_HOME/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy dependency files first (Docker layer caching)
COPY pyproject.toml poetry.lock* ./

# Install Python dependencies
RUN poetry install --no-root

# Copy application code
COPY . .

# Install the project itself
RUN poetry install

# Create non-root user for security
RUN useradd -m -u 1000 dronesphere && \
    chown -R dronesphere:dronesphere /app

USER dronesphere

# Expose API port
EXPOSE 8000

# Development server with hot reload
CMD ["uvicorn", "src.adapters.input.api.rest.main:app", \
     "--host", "0.0.0.0", \
     "--port", "8000", \
     "--reload", \
     "--log-level", "debug"]
