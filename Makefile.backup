.PHONY: help install install-dev test test-cov lint format clean run-server run-simulator docs

.DEFAULT_GOAL := help

PROJECT_NAME = dronesphere
PYTHON = python3
POETRY = poetry
PYTEST = pytest
BLACK = black
ISORT = isort
FLAKE8 = flake8
MYPY = mypy

help:
@echo "Usage: make [target]"
@echo ""
@echo "Targets:"
@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "  %-20s %s\n", $$1, $$2}' $(MAKEFILE_LIST)

install: ## Install production dependencies
$(POETRY) install --only main

install-dev: ## Install all dependencies including dev
$(POETRY) install

test: ## Run tests
$(POETRY) run $(PYTEST) tests/unit -v

test-all: ## Run all tests with coverage
$(POETRY) run $(PYTEST) -v --cov=src --cov-report=term-missing

lint: ## Run linting checks
$(POETRY) run $(FLAKE8) src tests
$(POETRY) run $(MYPY) src

format: ## Format code
$(POETRY) run $(ISORT) src tests
$(POETRY) run $(BLACK) src tests

clean: ## Clean up generated files
find . -type d -name "__pycache__" -exec rm -rf {} +
rm -rf .coverage htmlcov .pytest_cache .mypy_cache dist build *.egg-info

setup: install-dev ## Initial project setup
$(POETRY) run pre-commit install
cp .env.example .env
@echo "Setup complete! Edit .env file with your configuration."
# (copy the content from step 7)
